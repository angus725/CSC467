Terminals unused in grammar

   LT
   GT


Grammar

    0 $accept: program $end

    1 program: tokens

    2 tokens: tokens token
    3       | /* empty */

    4 token: IDENTIFIER
    5      | QUALIFIER
    6      | IF
    7      | ELSE
    8      | WHILE
    9      | FOR
   10      | BOOL
   11      | INT
   12      | FLOAT
   13      | AND
   14      | OR
   15      | EQ
   16      | NEQ
   17      | LE
   18      | GE
   19      | '+'
   20      | '-'
   21      | '*'
   22      | '/'
   23      | '='
   24      | '^'
   25      | '!'
   26      | '<'
   27      | '>'
   28      | '('
   29      | ')'
   30      | '{'
   31      | '}'
   32      | '['
   33      | ']'
   34      | ';'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 25
'(' (40) 28
')' (41) 29
'*' (42) 21
'+' (43) 19
'-' (45) 20
'/' (47) 22
';' (59) 34
'<' (60) 26
'=' (61) 23
'>' (62) 27
'[' (91) 32
']' (93) 33
'^' (94) 24
'{' (123) 30
'}' (125) 31
error (256)
IDENTIFIER (258) 4
QUALIFIER (259) 5
IF (260) 6
ELSE (261) 7
FOR (262) 9
WHILE (263) 8
BOOL (264) 10
INT (265) 11
FLOAT (266) 12
AND (267) 13
OR (268) 14
EQ (269) 15
NEQ (270) 16
LT (271)
LE (272) 17
GT (273)
GE (274) 18


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
program (37)
    on left: 1, on right: 0
tokens (38)
    on left: 2 3, on right: 1 2
token (39)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27 28 29 30 31 32 33 34, on right: 2


state 0

    0 $accept: . program $end

    $default  reduce using rule 3 (tokens)

    program  go to state 1
    tokens   go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: tokens .
    2 tokens: tokens . token

    IDENTIFIER  shift, and go to state 4
    QUALIFIER   shift, and go to state 5
    IF          shift, and go to state 6
    ELSE        shift, and go to state 7
    FOR         shift, and go to state 8
    WHILE       shift, and go to state 9
    BOOL        shift, and go to state 10
    INT         shift, and go to state 11
    FLOAT       shift, and go to state 12
    '+'         shift, and go to state 13
    '-'         shift, and go to state 14
    '*'         shift, and go to state 15
    '/'         shift, and go to state 16
    '='         shift, and go to state 17
    '^'         shift, and go to state 18
    '<'         shift, and go to state 19
    '>'         shift, and go to state 20
    AND         shift, and go to state 21
    OR          shift, and go to state 22
    EQ          shift, and go to state 23
    NEQ         shift, and go to state 24
    LE          shift, and go to state 25
    GE          shift, and go to state 26
    '('         shift, and go to state 27
    ')'         shift, and go to state 28
    '['         shift, and go to state 29
    ']'         shift, and go to state 30
    '{'         shift, and go to state 31
    '}'         shift, and go to state 32
    '!'         shift, and go to state 33
    ';'         shift, and go to state 34

    $default  reduce using rule 1 (program)

    token  go to state 35


state 3

    0 $accept: program $end .

    $default  accept


state 4

    4 token: IDENTIFIER .

    $default  reduce using rule 4 (token)


state 5

    5 token: QUALIFIER .

    $default  reduce using rule 5 (token)


state 6

    6 token: IF .

    $default  reduce using rule 6 (token)


state 7

    7 token: ELSE .

    $default  reduce using rule 7 (token)


state 8

    9 token: FOR .

    $default  reduce using rule 9 (token)


state 9

    8 token: WHILE .

    $default  reduce using rule 8 (token)


state 10

   10 token: BOOL .

    $default  reduce using rule 10 (token)


state 11

   11 token: INT .

    $default  reduce using rule 11 (token)


state 12

   12 token: FLOAT .

    $default  reduce using rule 12 (token)


state 13

   19 token: '+' .

    $default  reduce using rule 19 (token)


state 14

   20 token: '-' .

    $default  reduce using rule 20 (token)


state 15

   21 token: '*' .

    $default  reduce using rule 21 (token)


state 16

   22 token: '/' .

    $default  reduce using rule 22 (token)


state 17

   23 token: '=' .

    $default  reduce using rule 23 (token)


state 18

   24 token: '^' .

    $default  reduce using rule 24 (token)


state 19

   26 token: '<' .

    $default  reduce using rule 26 (token)


state 20

   27 token: '>' .

    $default  reduce using rule 27 (token)


state 21

   13 token: AND .

    $default  reduce using rule 13 (token)


state 22

   14 token: OR .

    $default  reduce using rule 14 (token)


state 23

   15 token: EQ .

    $default  reduce using rule 15 (token)


state 24

   16 token: NEQ .

    $default  reduce using rule 16 (token)


state 25

   17 token: LE .

    $default  reduce using rule 17 (token)


state 26

   18 token: GE .

    $default  reduce using rule 18 (token)


state 27

   28 token: '(' .

    $default  reduce using rule 28 (token)


state 28

   29 token: ')' .

    $default  reduce using rule 29 (token)


state 29

   32 token: '[' .

    $default  reduce using rule 32 (token)


state 30

   33 token: ']' .

    $default  reduce using rule 33 (token)


state 31

   30 token: '{' .

    $default  reduce using rule 30 (token)


state 32

   31 token: '}' .

    $default  reduce using rule 31 (token)


state 33

   25 token: '!' .

    $default  reduce using rule 25 (token)


state 34

   34 token: ';' .

    $default  reduce using rule 34 (token)


state 35

    2 tokens: tokens token .

    $default  reduce using rule 2 (tokens)
